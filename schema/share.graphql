extend type Query {
  getShareCode: ShareCode
  getShares: [Share]!
}

extend type Mutation {
  createShareCode: ShareCode!
  createShare(input: CreateShareInput!): CreateSharePayload!
}

"""
input
"""
input CreateShareInput {
  code: Int!
}

"""
type
"""
type ShareCode {
  sharerID: ID!
  code: Int!
  isActive: Boolean!
}

type Share {
  sharerID: ID!
  shareeID: ID!
  isActive: Boolean!
}

type CreateSharePayload implements BasePayload {
  isSuccess: Boolean!
}
